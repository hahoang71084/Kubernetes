============ RUN ON ALL NODE ==============
# Prepare for all node
# Add GPG key for Docker repo
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# Add GPG key for Kubernetes repo
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
cat << EOF | tee /etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF

# Update Repo
apt-get update

# Install Kubernetes component
apt-get install -y \
docker.io \
kubelet=1.17.8-00 \
kubeadm=1.17.8-00 kubectl=1.17.8-00

# Hold Kubernetes version
apt-mark hold docker kubelet kubeadm

# Start and Enable kubernetes service
systemctl enable kubelet

# Disable Swap
swapoff -a

======= END RUN ON ALL NODE ========

======== RUN ONLY MASTER NODE ==========

# Bootstraping master node
kubeadm init --pod-network-cidr=192.19.0.0/16

# Apply overlay networking
kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

# Configure token
mkdir -p $HOME/.kube
cp -i /etc/kubernetes/admin.conf $HOME/.kube/confi
cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

# Show join command
kubeadm token create --print-join-command

# Get node info
kubectl get nodes

# Get node health
kubectl get componentstatuses
